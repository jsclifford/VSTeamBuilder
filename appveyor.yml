# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#
version: 0.7.3.{build}
image: WMF 5
skip_commits:
  files:
   - '**/*.md'
   - .github/*

#---------------------------------#
#      environment configuration  #
#---------------------------------#
environment:
  codecovetoken:
    secure: 7+DG4taP7Anz64lB7dSi/48xLAXJXL1d+auWI11pAUkEPccGRmFVlxi2w8RzW3Ol

install:
# - ps: (Import-PowerShellDataFile "$($env:APPVEYOR_BUILD_FOLDER)\src\VSTeamBuilder.psd1").RequiredModules | ForEach-Object { Install-Module $PSItem.moduleName -RequiredVersion $PSItem.ModuleVersion -Repository PSGallery -Scope CurrentUser -Force }
# - cinst pester
# - cinst psake
- ps: Write-Verbose -Message "PowerShell version $($PSVersionTable.PSVersion)" -Verbose
- ps: $moduleData = Import-PowerShellDataFile "$($env:APPVEYOR_BUILD_FOLDER)\src\VSTeamBuilder.psd1"
- ps: $moduleData.RequiredModules | ForEach-Object { Install-Module $PSItem.moduleName -Repository PSGallery -Scope CurrentUser -Force }
- ps: Install-Module pester -Scope CurrentUser -Force
- ps: Install-Module psake -Scope CurrentUser -Force

#---------------------------------#
#      build configuration        #
#---------------------------------#

build: false

#---------------------------------#
#      test configuration         #
#---------------------------------#

test_script:
- ps: Invoke-PSake $env:APPVEYOR_BUILD_FOLDER\build\build.psake.ps1 -taskList Test
- ps: if ($psake.build_success -eq $false) { throw "Psake Build Failed. $($psake.error_message)"}

after_test:
- ps: >-
    (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $env:APPVEYOR_BUILD_FOLDER\release\PesterReport\Unit.TEST.xml))
- ps: |
      $env:PATH = 'C:\msys64\usr\bin;' + $env:PATH
      Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
      bash codecov.sh -f "$($env:APPVEYOR_BUILD_FOLDER)\release\PesterReport\CodeCoverage.xml" -t $env:codecovetoken
branches:
  only:
  - dev
  - master
skip_tags: true


#---------------------------------#
#      deployment configuration   #
#---------------------------------#

# scripts to run before deployment
# before_deploy:
#   - ps: hostname

# for:
# -
#   branches:
#     only:
#       - master

#   deploy:
#     - provider: Environment
#       name: Test PS Gallery
#       on:
#         appveyor_repo_tag: true
